%bcond_with     debug
%bcond_with     debuginfo

Name:           @PACKAGE@-kmod
Version:        @VERSION@
Release:        @RELEASE@%{?dist}

Summary:        Kernel module(s)
Group:          System Environment/Kernel
License:        @ZFS_META_LICENSE@
URL:            https://github.com/openzfs/zfs
BuildRequires:  %kernel_module_package_buildreqs
Source0:        @PACKAGE@-%{version}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)

# Additional dependency information for the kmod sub-package must be specified
# by generating a preamble text file which kmodtool can append to the spec file.
%(/bin/echo -e "\
Requires:       @PACKAGE@ = %{version}\n\
Conflicts:      @PACKAGE@-dkms\n\
Obsoletes:      kmod-spl\n\
Obsoletes:      spl-kmod\n\n" > %{_sourcedir}/kmod-preamble)

# LDFLAGS are not sanitized by arch/*/Makefile for these architectures.
%ifarch ppc ppc64 ppc64le aarch64
%global __global_ldflags %{nil}
%endif

%description
This package contains the ZFS kernel modules.

%define kmod_name @PACKAGE@

%kernel_module_package -n %{kmod_name} -p %{_sourcedir}/kmod-preamble

%define ksrc %{_usrsrc}/kernels/%{kverrel}
%define kobj %{ksrc}

%package -n kmod-%{kmod_name}-devel
Summary:        ZFS kernel module(s) devel common
Group:          System Environment/Kernel
Provides:       kmod-spl-devel = %{version}

%description -n  kmod-%{kmod_name}-devel
This package provides the header files and objects to build kernel modules.

%prep
if ! [ -d "%{ksrc}"  ]; then
        echo "Kernel build directory isn't set properly, cannot continue"
        exit 1
fi

%if %{with debug}
%define debug --enable-debug
%else
%define debug --disable-debug
%endif

%if %{with debuginfo}
%define debuginfo --enable-debuginfo
%else
%define debuginfo --disable-debuginfo
%endif

#
# = Delphix-Specific Note
#
# With the introduction of commit 48edb0029728d72088a1c2c65151fa2390fabf22
# where we split the debug info as part of `make install`, we started
# creating these debug files that are not picked up by the process that
# creates the RPM packages of ZFS. Yet the fact that we don't use them
# for RPMs is enough for that process to generate errors. With the following
# `define` statement we silence those errors.
#
# This is reasonable for us to do for the following reasons:
# [1] We don't currently care about RPMs, as our product uses DEBIAN files
#     and the debug files are picked up by those packages.
# [2] We won't be getting build failures related to RPMs that are caused
#     due to this issue in the future anymore, and this is fine because
#     of [1].
# [3] This change is not as invasive in the RPM configuration as it would
#     be to fix it to include those debug files. This is good for avoiding
#     potential merge conflicts in the future, or at least make them more
#     straightforward to resolve.
#
%define _unpackaged_files_terminate_build 0

%setup -n %{kmod_name}-%{version}
%build
%configure \
        --with-config=kernel \
        --with-linux=%{ksrc} \
        --with-linux-obj=%{kobj} \
        %{debug} \
        %{debuginfo}
make %{?_smp_mflags}

%install
make install \
        DESTDIR=${RPM_BUILD_ROOT} \
        INSTALL_MOD_DIR=extra/%{kmod_name}
%{__rm} -f %{buildroot}/lib/modules/%{kverrel}/modules.*

# find-debuginfo.sh only considers executables
%{__chmod} u+x  %{buildroot}/lib/modules/%{kverrel}/extra/*/*/*

%clean
rm -rf $RPM_BUILD_ROOT

%files -n kmod-%{kmod_name}-devel
%{_usrsrc}/%{kmod_name}-%{version}
%{_usrsrc}/spl-%{version}
